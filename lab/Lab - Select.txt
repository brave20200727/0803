/* 010 
  確定打開的是 Northwind 資料庫 */
use Northwind;

/* 110 
  請寫一道 Query 列出:
  products table 中的所有產品資料
 */ 

select * from products


/* 120 
  請寫一道 Query 列出:
  products table 所有產品, 條列資料時, 
  請列出以下欄位
  ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
 */ 

select ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
  from products


/* 130 
  請寫一道 Query 列出:
  products table 庫存量低於再訂購量的產品資料, 條列資料時, 
  請列出以下欄位
  ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
 */ 


select ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
  from products
  where UnitsInStock < ReorderLevel


/* 140 
  請寫一道 Query 列出:
  products table (庫存量 + 訂購中數量)低於再訂購量的產品資料, 條列資料時, 
  請列出以下欄位
  ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
 */ 

select ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
  from products
  where (UnitsInStock + UnitsOnOrder) < ReorderLevel


/* 150 
  請寫一道 Query 列出:
  products table 庫存量低於再訂購量的產品資料, 條列資料時, 
  請列出以下欄位
  SupplierID, ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
  並且, 相同供應商代號(SupplierID)的產品請排在一起
 */ 

select SupplierID, ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
  from products
  where UnitsInStock < ReorderLevel
  order by SupplierID
  // ASC 正序 DESC 倒序


/* 160 
  請寫一道 Query 列出:
  products table 產品名稱以 c 開頭的資料
 */ 

select *
  from products
  where ProductName Like 'c%'

/* 如果想要區分大小寫的話要改成這樣
SELECT *
FROM products
WHERE BINARY ProductName Like 'c%'
*/

/* 170 
  請寫一道 Query 列出:
  products table 類別編號(CategoryID)為 1, 4, 8 的產品資料
  排序時, 請按"類別編號"排序, 相同類別編號的產品按產品名稱(ProductName)排列
 */ 

select *
  from products
  where CategoryID in (1, 4, 8)
  order by CategoryID, ProductName


/* 180 
  請寫一道 Query 列出:
  products table 單價介於 10 到 20 元之間(包含 10, 20)的產品資料
  並且按照單價(UnitPrice)由大到小排序
 */ 

select *
  from products
  where UnitPrice between 10 and 20
  order by UnitPrice desc

/* 190
  請寫一道 Query 列出: 傳真電話(fax)是「空白」的供應商(suppliers)公司名稱
*/

SELECT companyname, fax
FROM suppliers
WHERE fax IS NULL;

SELECT companyname, fax
FROM suppliers
WHERE fax = NULL

以上兩個結果為不同

/* 如果資料庫名稱或是資料表名稱中間有空格時，能夠使用``去括起來 */

/* 210 
  請寫一道 Query 列出:
  products table 所有產品, 條列資料時, 
  請列出以下欄位
  ProductID, ProductName, UnitPrice, 不過, 各欄位名稱請用中文顯示
  產品編號, 產品名稱, 單價
 */ 

select ProductID as `產品編號`, ProductName as `產品名稱`, UnitPrice as `單價`, 
  (UnitPrice * UnitsInStock) as StockCost
  from products


/* 220 
  請查 suppliers 資料表, 供應商來自哪些國家? (相同的國名, 只列一筆即可)
 */ 

SELECT DISTINCT country
 FROM suppliers
 ORDER BY country;


/* 220 
  請列出 UnitPrice 最貴的前三項產品 (products)
 */ 

select productID, ProductName, UnitPrice 
  from products
  order by UnitPrice DESC
  limit 3;

/* 我的寫法
SELECT ProductID, ProductName, UnitPrice
FROM products
ORDER BY UnitPrice DESC
LIMIT 0, 3 // 每頁三個從第零個開始，也就是1-3名，如果改成LIMIT 3, 3也就是說4-6名
*/

/* 230 
  為什麼下列的指令傳回空集合?
 */ 

select *
  from products
  where ProductName Like binary 'c%'

A: 因為加上binary之後會有分大小寫的差別

/* 美商供應的產品清單
-- 起
SELECT *
FROM products
-- 承
SELECT ProductID, ProductName, UnitPrice
FROM products
WHERE ???
-- 轉
SELECT *
FROM suppliers
WHERE Country = 'USA'
-- 合
SELECT ProductID, ProductName, UnitPrice
FROM products
WHERE supplierID IN (2, 3, 16, 19)
=>
SELECT ProductID, ProductName, UnitPrice
FROM products
WHERE supplierID IN (SELECT supplierID FROM suppliers WHERE Country = 'USA')
*/
/* 比對價差 ver1.0（與所有商品的平均相比）
-- 起
SELECT * FROM products
-- 承
SELECT ProductID, ProductName, UnitPrice, ?AvgPrice?
FROM products
-- 轉
SELECT AVG(UnitPrice)
FROM products
-- 合
SELECT ProductID, ProductName, UnitPrice, (UnitPrice - 28.87) as DiffPrice
FROM products
=>
SELECT ProductID, ProductName, UnitPrice,
(SELECT AVG(UnitPrice) FROM products) AS AvgPrice,
(UnitPrice - (SELECT AVG(UnitPrice) FROM products)) as DiffPrice
FROM products
*/
/* 比對價差 ver２.0（與同類商品的平均相比）
-- 起
SELECT * FROM products
-- 承
SELECT CategoryID, ProductID, ProductName, UnitPrice, ?AvgPrice?
FROM products
-- 轉
SELECT AVG(UnitPrice)
FROM products
WHERE CategoryID = 1
SELECT AVG(UnitPrice)
FROM products
WHERE CategoryID = 2
.
.
.
-- 合
// p用來標示參考當時該筆紀錄的類別編號
SELECT CategoryID, ProductID, ProductName, UnitPrice,
(SELECT AVG(UnitPrice) FROM products WHERE CategoryID = p.CategoryID) AS AvgPrice,
(UnitPrice - (SELECT AVG(UnitPrice) FROM products WHERE CategoryID = p.CategoryID )) as DiffPrice
FROM products as p
*/

/* 310
  按照員工資料表(employees)的內容, 請查出一共有幾位員工?
 */
SELECT COUNT(*) FROM employees


/* 320
  按照員工資料表(employees)的內容, ReportsTo有資料的記錄一共幾筆?
 */
SELECT COUNT(reportsto) FROM employees

/*
SELECT CategoryID, AVG(UnitPrice) AS AVGPrice FROM products GROUP BY CategoryID

等同於這樣的效果
=>
SELECT AVG(UnitPrice) FROM products WHERE CategoryID = 1
SELECT AVG(UnitPrice) FROM products WHERE CategoryID = 2
SELECT AVG(UnitPrice) FROM products WHERE CategoryID = 3
SELECT AVG(UnitPrice) FROM products WHERE CategoryID = 4
.
.
.
*/
/* 彙總後二次篩選 選出平均單價大於30
SELECT CategoryID, AVG(UnitPrice) AS AVGPrice
FROM products
GROUP BY CategoryID
HAVING AVG(UnitPrice) >= 30
*/
/* 希望看到明細 又看到小計
SELECT OrderID, ProductID, SUM(Quantity)
FROM `order details`
GROUP BY OrderID, ProductID
WITH ROLLUP
*/

/* 330
  下列的指令, 請問錯了嗎?
 */

select categoryID, productID, AVG(UnitPrice) // ProductID有點多餘
  from products
  group by categoryID


/* 340
  categoryID 是產品類別的代號, 請統計各類產品(products)的庫存成本?
  庫存成本請直接以: 庫存量 * 牌價 (UnitsInStock * UnitPrice) 計算即可.
 */

select categoryID, Sum(UnitsInStock * UnitPrice)
  from products
  group by categoryID;

我寫的
SELECT CategoryID, SUM(UnitPrice*UnitsInStock) AS stockCost
FROM products
GROUP BY CategoryID

/* 350
  同上, 但庫存成本超過 12000 才要列出.
 */

select categoryID, Sum(UnitsInStock * UnitPrice)
  from products
  group by categoryID
  having Sum(UnitsInStock * UnitPrice) > 12000

我寫的
SELECT CategoryID, SUM(UnitPrice*UnitsInStock) AS stockCost
FROM products
GROUP BY CategoryID
HAVING SUM(UnitPrice*UnitsInStock) > 12000

/* 360
  請從 order details 統計各項產品銷售總和, 並且一併列出
  該產品的銷售明細.
 */

SELECT productid, orderid, SUM(quantity) AS total_quantity
 FROM `order details`
 GROUP BY productid, orderid
 WITH ROLLUP

我寫的
SELECT OrderID, ProductID, SUM(Quantity)
FROM `order details`
GROUP BY OrderID, ProductID
WITH ROLLUP


/*
預設JOIN為INNER JOIN
INNER為兩個資料表都有的
LEFT OUTER為左側資料表全列


SELECT L.A, B, C FROM Table1 AS L JOIN Table2 AS R ON R.A = L.A

Table1                    Table2
A       B       ...       C         A        ...      可以想成這樣
A1      B1*               C1        A1*               SELECT * FROM Table2 WHERE A = 'A1'
A2      B2#               C2        A2#               SELECT * FROM Table2 WHERE A = 'A2'
A3      B3                C3        A2#               SELECT * FROM Table2 WHERE A = 'A2'
A4      B4@               C4        A4@               SELECT * FROM Table2 WHERE A = 'A4'


A       B       C
A1      B1      C1*
A2      B2      C2#
A2      B2      C3#
A4      B4      C4@
*/

/* 410
  請寫一道 Query 列出 products 資料表的以下欄位
  ProductID, ProductName, SupplierID
 */ 

select ProductID, ProductName, SupplierID from products


/* 420
   同上, 但請一併列出該供應商名稱(CompanyName)、
   聯絡電話(Phone)、聯絡人(ContactName)好嗎?
   另外, 相同供應商的資料請列在一起
 */

select ProductID, ProductName as PN, p.SupplierID, CompanyName, Phone, ContactName 
  from products p join suppliers s
  on p.SupplierID = s.SupplierID
  order by p.SupplierID

我寫的
SELECT p.ProductID, p.ProductName, s.CompanyName, s.Phone, s.ContactName
FROM products AS p JOIN suppliers AS s
ON p.SupplierID = s.SupplierID
ORDER BY p.SupplierID

/* UNION練習
SELECT CustomerID, CompanyName
FROM customers
WHERE CompanyName LIKE 'A%'
UNION
SELECT CustomerID, CompanyName
FROM customers
WHERE CompanyName LIKE 'B%'
*/

/* 430
   我想列出「所有」供應商目前各自提供我們哪些產品資料的對照表,
   目前沒提供我們產品的供應商也要列出

   <note>
   下指令前, 請先執行下列指令:
   -- begin --
   insert into suppliers
     (supplierID, CompanyName, ContactName, Phone)
      values
     (30, 'Taiwan First', 'A-Ban', '(001) 000-0001')
   -- end --
 */ 

select s.SupplierID, CompanyName, ProductID, ProductName 
  from suppliers s left join products p
  on s.SupplierID = p.SupplierID
  order by s.SupplierID

SELECT p.ProductID, p.ProductName, s.CompanyName, s.Phone, s.ContactName
FROM products AS p RIGHT OUTER JOIN suppliers AS s
ON p.SupplierID = s.SupplierID
ORDER BY p.SupplierID

/*
SELECT 
*/

/* 510
  請列出「有買 23 號產品, 而且買超過 20 個」的訂單。
 */ 
select orderid, customerid from orders 
  where orderid in 
  (select orderid from `order details` 
    where productid = 23 and quantity > 20)

SELECT o.OrderID, o.CustomerID
FROM orders AS o JOIN `order details` AS od
ON o.OrderID = od.OrderID
WHERE od.ProductID = 23 AND od.Quantity > 20

/* 520
  請列出目前資料庫最後一天有經手訂單處理的員工清單。
*/
select EmployeeID, FirstName, LastName from Employees
  where EmployeeID in 
  (
    select EmployeeID from Orders
      where OrderDate = (select Max(OrderDate) from Orders)
  )


/* 530
  請列出各項產品的類別、編號、品名、單價、該類產品平均單價、
  單價與產品平均單價的「價差」。
 */ 
select CategoryID, ProductID, UnitPrice, 
  (select Avg(UnitPrice) from products as i 
    where CategoryID = o.CategoryID) as AvgPrice,
  UnitPrice - (select Avg(UnitPrice) from products as I 
    where CategoryID = o.CategoryID) as DiffPrice
  from products as o
  order by CategoryID, ProductID

